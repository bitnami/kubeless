{
  "swagger": "2.0",
  "info": {
   "title": "Kubeless API",
   "version": "unversioned"
  },
  "paths": {
   "/apis/k8s.io/v1/functions": {
    "get": {
     "description": "list or watch objects of kind Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "listK8sIoV1FunctionForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.FunctionList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/k8s.io/v1/namespaces/{namespace}/functions": {
    "get": {
     "description": "list or watch objects of kind Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "listK8sIoV1NamespacedFunction",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.FunctionList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "post": {
     "description": "create a Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "createK8sIoV1NamespacedFunction",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Function"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Function"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "delete": {
     "description": "delete collection of Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "deleteK8sIoV1CollectionNamespacedFunction",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/k8s.io/v1/namespaces/{namespace}/functions/{name}": {
    "get": {
     "description": "read the specified Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "readK8sIoV1NamespacedFunction",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Function"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "put": {
     "description": "replace the specified Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "replaceK8sIoV1NamespacedFunction",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Function"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Function"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "delete": {
     "description": "delete a Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "deleteK8sIoV1NamespacedFunction",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list.",
       "name": "orphanDependents",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "patch": {
     "description": "partially update the specified Function",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "patchK8sIoV1NamespacedFunction",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Function"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Function",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/k8s.io/v1/watch/functions": {
    "get": {
     "description": "watch individual changes to a list of Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "watchK8sIoV1FunctionListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/k8s.io/v1/watch/namespaces/{namespace}/functions": {
    "get": {
     "description": "watch individual changes to a list of Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "watchK8sIoV1NamespacedFunctionList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/k8s.io/v1/watch/namespaces/{namespace}/functions/{name}": {
    "get": {
     "description": "watch changes to an object of kind Function",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "k8sio_v1"
     ],
     "operationId": "watchK8sIoV1NamespacedFunction",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Function",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   }
  },
  "definitions": {
   "unversioned.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     }
    }
   },
   "unversioned.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
   },
   "unversioned.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": "string"
     },
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/unversioned.StatusDetails"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "type": "string"
     }
    }
   },
   "unversioned.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },
   "unversioned.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "unversioned.Time": {
    "type": "string",
    "format": "date-time"
   },
   "v1.Function": {
    "description": "Function holds configuration data for pods to consume.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": "string"
     },
     "data": {
      "description": "Data contains the configuration data. Each key must be a valid DNS_SUBDOMAIN with an optional leading dot.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     }
    }
   },
   "v1.FunctionKeySelector": {
    "description": "Selects a key from a Function.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key to select.",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     }
    }
   },
   "v1.FunctionList": {
    "description": "FunctionList is a resource containing a list of Function objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of Functions.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Function"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.FunctionVolumeSource": {
    "description": "Adapts a Function into a volume.\n\nThe contents of the target Function's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Function volumes support ownership management and SELinux relabeling.",
    "properties": {
     "defaultMode": {
      "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
      "type": "integer",
      "format": "int32"
     },
     "items": {
      "description": "If unspecified, each key-value pair in the Data field of the referenced Function will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Function, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.KeyToPath"
      }
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     }
    }
   },
   "v1.KeyToPath": {
    "description": "Maps a string key to a path within a volume.",
    "required": [
     "key",
     "path"
    ],
    "properties": {
     "key": {
      "description": "The key to project.",
      "type": "string"
     },
     "mode": {
      "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
      "type": "integer",
      "format": "int32"
     },
     "path": {
      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
      "type": "string"
     }
    }
   },
   "versioned.Event": {
    "description": "Event represents a single event to a watched resource.",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *api.Status is recommended; other types may make sense\n   depending on context.",
      "$ref": "#/definitions/runtime.RawExtension"
     },
     "type": {
      "type": "string"
     }
    }
  },
  "runtime.RawExtension": {
   "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
   "required": [
    "Raw"
   ],
   "properties": {
    "Raw": {
     "description": "Raw is the underlying serialization of this object.",
     "type": "string",
     "format": "byte"
    }
   }
  },
   "v1.Event": {
    "description": "Event is a report of an event somewhere in the cluster.",
    "required": [
     "metadata",
     "involvedObject"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": "string"
     },
     "count": {
      "description": "The number of times this event has occurred.",
      "type": "integer",
      "format": "int32"
     },
     "firstTimestamp": {
      "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)",
      "$ref": "#/definitions/unversioned.Time"
     },
     "involvedObject": {
      "description": "The object that this event is about.",
      "$ref": "#/definitions/v1.ObjectReference"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "lastTimestamp": {
      "description": "The time at which the most recent occurrence of this event was recorded.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "reason": {
      "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
      "type": "string"
     },
     "source": {
      "description": "The component reporting this event. Should be a short machine understandable string.",
      "$ref": "#/definitions/v1.EventSource"
     },
     "type": {
      "description": "Type of this event (Normal, Warning), new types could be added in the future",
      "type": "string"
     }
    }
   },
   "v1.EventSource": {
    "description": "EventSource contains information for an event.",
    "properties": {
     "component": {
      "description": "Component from which the event is generated.",
      "type": "string"
     },
     "host": {
      "description": "Node name on which the event is generated.",
      "type": "string"
     }
    }
   },
   "v1.Namespace": {
    "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the behavior of the Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NamespaceSpec"
     },
     "status": {
      "description": "Status describes the current status of a Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NamespaceStatus"
     }
    }
   },
   "v1.NamespaceSpec": {
    "description": "NamespaceSpec describes the attributes on a Namespace.",
    "properties": {
     "finalizers": {
      "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#finalizers",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.NamespaceStatus": {
    "description": "NamespaceStatus is information about the current status of a Namespace.",
    "properties": {
     "phase": {
      "description": "Phase is the current lifecycle phase of the namespace. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#phases",
      "type": "string"
     }
    }
   },
   "v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.Time"
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OwnerReference"
      }
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.DeleteOptions": {
    "description": "DeleteOptions may be provided when deleting an API object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": "string"
     },
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "type": "integer",
      "format": "int64"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "orphanDependents": {
      "description": "Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list.",
      "type": "boolean"
     },
     "preconditions": {
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
      "$ref": "#/definitions/v1.Preconditions"
     }
    }
   },
   "v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "properties": {
     "uid": {
      "description": "Specifies the target UID.",
      "type": "string"
     }
    }
   },
   "v1.ObjectReference": {
    "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "fieldPath": {
      "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "resourceVersion": {
      "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   }
  },
  "securityDefinitions": {
   "BearerToken": {
    "description": "Bearer Token authentication",
    "type": "apiKey",
    "name": "authorization",
    "in": "header"
   }
  }
 }
